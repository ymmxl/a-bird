#!/bin/bash
set -e
read -e -p "project name: " pname
read -e -p "Loop number: " LOOP

foo (){
	rg = $1
	echo "Region: $1"
	if [[ $rg = "au" ]]
	then
		ZN=australia-southeast1-b
	elif [[ $rg = "sg" ]]
	then
		ZN=asia-southeast1-b
	else
		echo "Wrong region: au or sg only for now."
		exit
	fi
	gcloud compute instances create "test-image-${rg}" --zone=$ZN \
	--machine-type=f1-micro --subnet=default \
	--network-tier=PREMIUM --maintenance-policy=MIGRATE \
	--scopes=https://www.googleapis.com/auth/devstorage.read_only,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/trace.append \
	--tags=http-server,https-server --image=centos-7-v20210420 --image-project=centos-cloud --boot-disk-size=20GB \
	--boot-disk-type=pd-balanced --no-shielded-secure-boot --shielded-vtpm \
	--shielded-integrity-monitoring --reservation-affinity=any

	#allow http traffic
	gcloud compute firewall-rules create default-allow-http --direction=INGRESS --priority=1000 --network=default \
	--action=ALLOW --rules=tcp:80 --source-ranges=0.0.0.0/0 --target-tags=http-server

	#allow https traffic
	gcloud compute firewall-rules create default-allow-https --direction=INGRESS --priority=1000 --network=default \
	--action=ALLOW --rules=tcp:443 --source-ranges=0.0.0.0/0 --target-tags=https-server	
}
setup () {
	#create project
	gcloud projects create "${pname}-group-1"
	#get project number
	pnum=$(gcloud projects list --filter="${pname}-group-1" --format="value(PROJECT_NUMBER)")
	#fetch account id
	accid=$(gcloud alpha billing accounts list --format="value(ACCOUNT_ID)")
	#link billing
	gcloud alpha billing projects link "${pname}-group-1"  --billing-account $accid
	#set current project active
	gcloud config set project "${pname}-group-1"
	#enable api
	gcloud services enable compute.googleapis.com
	#add firewall
	gcloud compute firewall-rules create "firewall-${pname}-group-1" --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:6666,udp:6666 --source-ranges=0.0.0.0/0	
	foo "au"
	foo "sg"
	echo "Instances ready."
	echo "Manually install proxy script"
}

cont (){
	#for after setup
	read -e -p "ONLY CONTINUE IF YOU HAVE DONE -setup: [Y/n]" CONFIRM
	if [[ $CONFIRM = "n" ]]
	then
		exit
	fi
	echo "Stopping instances"
	gcloud compute instances stop test-image-au test-image-sg
	#create image
	echo "Creating images AU"
	gcloud compute images create $pname-image-au --project="${pname}-group-1" --source-disk=test-image-au \
	--source-disk-zone=australia-southeast1-b --storage-location=australia-southeast1
	#create sg image
	echo "Creating images SG"
	gcloud compute images create $pname-image-sg --project="${pname}-group-1" --source-disk=test-image-sg \
	--source-disk-zone=asia-southeast1-b --storage-location=asia-southeast1	
	#delete disks
	echo "Deleting instances"
	gcloud compute instances delete test-image-au test-image-sg --delete-disks=all
	#create instance template
	echo "Creating instances AU"
	gcloud beta compute instance-templates create "${pname}-template-au" --machine-type=f1-micro --network-tier=PREMIUM \
	--maintenance-policy=MIGRATE --tags=http-server,https-server --image=$pname-image-au --image-project="${pname}-group-1" --boot-disk-size=20GB \
	--boot-disk-type=pd-balanced --no-shielded-secure-boot --shielded-vtpm \
	--shielded-integrity-monitoring --reservation-affinity=any
	echo "Creating instances SG"
	gcloud beta compute instance-templates create "${pname}-template-sg" --machine-type=f1-micro --network-tier=PREMIUM \
	--maintenance-policy=MIGRATE --tags=http-server,https-server --image=$pname-image-sg --image-project="${pname}-group-1" --boot-disk-size=20GB \
	--boot-disk-type=pd-balanced --no-shielded-secure-boot --shielded-vtpm \
	--shielded-integrity-monitoring --reservation-affinity=any

	#add firewall rule
	echo "Adding firewall"
	gcloud compute firewall-rules create firewall$pname --direction=INGRESS --priority=1000 \
	--network=default --action=ALLOW --rules=tcp:6666,udp:6666 --source-ranges=0.0.0.0/0
	#create instance group
	echo "Creating instancegroup AU"
	gcloud compute instance-groups managed create "${pname}-group-1-au" --region "australia-southeast1" \
	--template "${pname}-template-au" --size 8
	#set auto-scaling off
	echo "Turning off autoscaling AU"
	gcloud beta compute instance-groups managed set-autoscaling "${pname}-group-1-au" --region "australia-southeast1" \
	--cool-down-period "60" --max-num-replicas "10" --min-num-replicas "1" --target-cpu-utilization "0.6" --mode "off"

	#create instance group sg
	echo "Creating instancegroup SG"
	gcloud compute instance-groups managed create "${pname}-group-1-sg" --region "asia-southeast1" \
	--template "${pname}-template-sg" --size 8
	#set auto-scaling off
	echo "Turning off autoscaling AU"
	gcloud beta compute instance-groups managed set-autoscaling "${pname}-group-1-sg" --region "asia-southeast1" \
	--cool-down-period "60" --max-num-replicas "10" --min-num-replicas "1" --target-cpu-utilization "0.6" --mode "off"
	echo "Complete! Close group manually or set shutdown.sh"
}

default (){
	fullname="${pname}-group-${LOOP}"
	#create project
	echo "Creating project"
	gcloud projects create $fullname
	#get project number
	echo "Getting project number"
	pnum=$(gcloud projects list --filter=$fullname --format="value(PROJECT_NUMBER)")
	#fetch account id
	echo "Fetching account id"
	accid=$(gcloud alpha billing accounts list --format="value(ACCOUNT_ID)")
	#link billing
	echo "Linking Billing"
	gcloud alpha billing projects link $fullname  --billing-account $accid
	#set current project active
	echo "Setting project active"
	gcloud config set project $fullname
	#enable api
	echo "enabling api"
	gcloud services enable compute.googleapis.com
	#add firewall
	echo "Adding firewall"
	gcloud compute firewall-rules create "firewall-${fullname}" --direction=INGRESS --priority=1000 --network=default \
	--action=ALLOW --rules=tcp:6666,udp:6666 --source-ranges=0.0.0.0/0	
	#add member to main group to use image
	echo "Adding member to iam"
	gcloud projects add-iam-policy-binding $fullname \
	--member serviceAccount:$pnum@cloudservices.gserviceaccount.com  \
	--role roles/compute.imageUser
	#create instance template
	echo "Creating template AU"
	gcloud beta compute instance-templates create "${fullname}-tmp-au" --machine-type=f1-micro --network-tier=PREMIUM \
	--maintenance-policy=MIGRATE --tags=http-server,https-server --image=$pname-image-au --image-project="${pname}-group-1" --boot-disk-size=20GB \
	--boot-disk-type=pd-balanced --no-shielded-secure-boot --shielded-vtpm \
	--shielded-integrity-monitoring --reservation-affinity=any
	echo "Creating template SG"
	gcloud beta compute instance-templates create "${fullname}-tmp-sg" --machine-type=f1-micro --network-tier=PREMIUM \
	--maintenance-policy=MIGRATE --tags=http-server,https-server --image=$pname-image-sg --image-project="${pname}-group-1" --boot-disk-size=20GB \
	--boot-disk-type=pd-balanced --no-shielded-secure-boot --shielded-vtpm \
	--shielded-integrity-monitoring --reservation-affinity=any	

	#allow http traffic
	gcloud compute firewall-rules create default-allow-http --direction=INGRESS --priority=1000 --network=default \
	--action=ALLOW --rules=tcp:80 --source-ranges=0.0.0.0/0 --target-tags=http-server

	#allow https traffic
	gcloud compute firewall-rules create default-allow-https --direction=INGRESS --priority=1000 --network=default \
	--action=ALLOW --rules=tcp:443 --source-ranges=0.0.0.0/0 --target-tags=https-server	

	#create instance group
	echo "Creating instancegroup AU"
	gcloud compute instance-groups managed create "${fullname}-au" --region "australia-southeast1" \
	--template "${fullname}-tmp-au" --size 8
	#set auto-scaling off
	echo "Turning off autoscaling AU"
	gcloud beta compute instance-groups managed set-autoscaling "${fullname}-au" --region "australia-southeast1" \
	--cool-down-period "60" --max-num-replicas "10" --min-num-replicas "1" --target-cpu-utilization "0.6" --mode "off"

	#create instance group sg
	echo "Creating instancegroup SG"
	gcloud compute instance-groups managed create "${fullname}-sg" --region "asia-southeast1" \
	--template "${fullname}-tmp-sg" --size 8
	#set auto-scaling off
	echo "Turning off autoscaling SG"
	gcloud beta compute instance-groups managed set-autoscaling "${fullname}-sg" --region "asia-southeast1" \
	--cool-down-period "60" --max-num-replicas "10" --min-num-replicas "1" --target-cpu-utilization "0.6" --mode "off"
	echo "Complete! Close group manually or set shutdown.sh"
}

case $1 in
	'-setup')
		setup;;
	'-setup2')
		cont;;
	*) # If option empty or non existing run function info
		default;;
esac